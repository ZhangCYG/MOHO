general {
    base_exp_dir = ./exp_dp_ho3d/ho3d_CASE_NAME
    recording = [
        ./,
        ./models
    ]
}

dataset {
    name = ho3d
    data_dir = PATH TO HO3D
    ref_dir = PATH TO HO3D
    cache_dir = PATH TO cache/ho3d_vid3fps_test_plus.pkl
    inner_iter = 60
    ref_mask = True
    scene_proportion = -1
    cat = 0
}

train {
    scene_batch_size = 6
    train_inner_iter = 8
    max_iter_use_bbox = 300000

    learning_rate = 4e-4
    learning_rate_alpha = 0.05
    end_iter = 300000

    batch_size = 150
    validate_resolution_level = 1
    warm_up_end = 1000
    anneal_end = 0
    use_white_bkgd = False

    save_freq = 5000
    val_freq = 2500
    val_mesh_freq = 2500
    report_freq = 100

    igr_weight = 1.0
    mask_weight = 1.0
    normal_weight = 1e3
    normal_smooth_weight = 0.01
    normal_smooth_thre = 15
}

model {
    nerf {
        D = 8,
        d_in = 4,
        d_in_view = 3,
        W = 256,
        multires = 10,
        multires_view = 4,
        output_ch = 4,
        skips=[4],
        use_viewdirs=True
    }

    sdf_network {
        d_out = 257
        d_in = 3
        d_feature = 307
        d_hidden = 512
        n_layers = 8
        skip_in = [4]
        multires = 6
        bias = 0.5
        scale = 1.0
        geometric_init = True
        weight_norm = True
    }

    variance_network {
        init_val = 0.3
    }

    rendering_network {
        d_feature = 515
        mode = idr
        d_in = 9
        d_out = 3
        d_hidden = 512
        n_layers = 4
        weight_norm = True
        multires_view = 4
        squeeze_out = True
    }

    neus_renderer {
        n_samples = 40
        n_importance = 40
        n_outside = 0
        up_sample_steps = 2     # 1 for simple coarse-to-fine sampling
        perturb = 1.0
    }

    enc{
        out_dim = 256
    }
}